S=sqrt(n-dim(Z)[1]-3)*abs(zeta)
B=rbind(B,c(i,j,k,S))
}
}
}
return(B)
}
cont_IndTest(deug$tab)
deug$tab
dim(deug[k,])[2]
dim(deug[2,])[2]
dim(deug$tab[2,])[2]
dim(deug$tab[,2])[2]
dim(deug$tab[,2])
dim(deug$tab)
dim(deug$tab[1,])
dim(deug$tab[,1])
dim(deug$tab[,2])
dim(deug$tab[1:104,2])
n=dim(deug$tab)[1]
n
######################################################################
###### More classical tests for zero partial correlation.   ##########
######################################################################
cond_cor <- function(CorXY,CorXZ,CorZY){
cond_cor=(CorXY-CorXZ*CorZY)/(sqrt(1-CorXZ^2)*sqrt(1-CorZY^2))
return(cond_cor)
}
cont_IndTest<-function(A){
CorM=cor(A)
d=dim(C)[1]
B=NULL
seqd=seq(1,d,by=1)
for(i in seqd[seqd!=d]){
seqdj=seq(i+1,d,by=1)
for(j in seqdj){
seqdk=seqd[seqd!=i&seqd!=j]
for(k in seqdk){
CC=cond_cor(CorM[i,j],CorM[i,k],CorM[j,k])
zeta=0.5*log((1+CC)/(1-CC))
n=dim(deug$tab)[1]
S=sqrt(n-1-3)*abs(zeta)
B=rbind(B,c(i,j,k,S))
}
}
}
return(B)
}
cont_IndTest(deug$tab)
contM=cont_IndTest(deug$tab)
contM[,4]
contM[,4]>qnorm(0.95)
contMTF=contM[,4]>qnorm(0.95)
contMTF
?"factanal"
###### Q5  Latent Factor   ##########
####Examples
# A little demonstration, v2 is just v1 with noise,
# and same for v4 vs. v3 and v6 vs. v5
# Last four cases are there to add noise
# and introduce a positive manifold (g factor)
v1 <- c(1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,4,5,6)
v2 <- c(1,2,1,1,1,1,2,1,2,1,3,4,3,3,3,4,6,5)
v3 <- c(3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,5,4,6)
v4 <- c(3,3,4,3,3,1,1,2,1,1,1,1,2,1,1,5,6,4)
v5 <- c(1,1,1,1,1,3,3,3,3,3,1,1,1,1,1,6,4,5)
v6 <- c(1,1,1,2,1,3,3,3,4,3,1,1,1,2,1,6,5,4)
m1 <- cbind(v1,v2,v3,v4,v5,v6)
cor(m1)
plot(cor(m1))
?plot3
?3plot
?3dplot
?plot3d
test=cor(m1)
cor(m1)
m1
factanal(m1, factors = 3) # varimax is the default
factanal(m1, factors = 3, rotation = "promax")
prcomp(m1) # signs may depend on platform
## formula interface
factanal(~v1+v2+v3+v4+v5+v6, factors = 3,
scores = "Bartlett")$scores
## a realistic example from Bartholomew (1987, pp. 61-65)
utils::example(ability.cov)
install.packages('ggplot')
install.packages('ggplot2')
?ggplot
??ggplot
?aes
??aes
lty <- c("blank", "solid", "dashed", "dotted", "dotdash",
"longdash","twodash")
linetypes <- data.frame(
y = seq_along(lty),
lty = lty
)
ggplot(linetypes, aes(0, y)) +
geom_segment(aes(xend = 5, yend = y, linetype = lty)) +
scale_linetype_identity() +
geom_text(aes(label = lty), hjust = 0, nudge_y = 0.2) +
scale_x_continuous(NULL, breaks = NULL) +
scale_y_continuous(NULL, breaks = NULL)
library(ggplo2)
lty <- c("blank", "solid", "dashed", "dotted", "dotdash",
"longdash","twodash")
linetypes <- data.frame(
y = seq_along(lty),
lty = lty
)
ggplot(linetypes, aes(0, y)) +
geom_segment(aes(xend = 5, yend = y, linetype = lty)) +
scale_linetype_identity() +
geom_text(aes(label = lty), hjust = 0, nudge_y = 0.2) +
scale_x_continuous(NULL, breaks = NULL) +
scale_y_continuous(NULL, breaks = NULL)
library(ggplo2)
install.packages("ggplot2")
library(ggplot2)
lty <- c("blank", "solid", "dashed", "dotted", "dotdash",
"longdash","twodash")
linetypes <- data.frame(
y = seq_along(lty),
lty = lty
)
ggplot(linetypes, aes(0, y)) +
geom_segment(aes(xend = 5, yend = y, linetype = lty)) +
scale_linetype_identity() +
geom_text(aes(label = lty), hjust = 0, nudge_y = 0.2) +
scale_x_continuous(NULL, breaks = NULL) +
scale_y_continuous(NULL, breaks = NULL)
# main_Jun01T1_Plot.py
# Python PLOT program for Task 1 of Jun 01,2017
# June 1,2017
# May 22-24, 2017
# 20170411 PM
# Mar18,2017
# Task #20170221
# Related to May16/Oct17,2016
# edited in Feb21,2017
rm(list=ls())
# setwd("/Users/huwei/Dropbox/temp/20170628 R Lang")
path0<-getwd()
if (!is.null(path0)) setwd(path0)
# use data frame to save and call parameters value
value = c(1.0,0.2,0.6,0.06,0.72,0.1,0.36,0.012,0.06,0.53,1.355,18.0,25.0,0.08)
myPara = data.frame(value)
row.names(myPara)=c("pstar","b","phi","sigma","beta","lambda","c_f","r","c_p","delta","A","B1","B2","mu")
#         value
# pstar   1.000
# b       0.200
# phi     0.600
# sigma   0.060
# beta    0.720
# lambda  0.100
# c_f     0.360
# r       0.012
# c_p     0.060
# delta   0.530
# A       1.355
# B1     18.000
# B2     25.000
# mu      0.080
# call the value:
# myPara["pstar","value"]
# variable vector for different cases
lvt <- list(pstar = seq(0.18,2.5,by=0.01),
b = seq(0.01,1.0,by=0.01),
phi = seq(0.05,0.5,by=0.01),
sigma = seq(0.01,1.2,by=0.01),
beta = seq(0.4,0.99,by=0.01),
lambda = seq(0.01,1.2,by=0.01),
c_f = seq(0.12,1.3,by=0.01),
r = seq(0.005,0.15,by=0.001),
c_p = seq(0.01,0.2,by=0.001),
delta = seq(0.01,0.7,by=0.01))
# extract part of object
# example
# test = "delta"
# vt = lvt[[test]]
lstr_var <- list(pstar = "p^*",
b = seq(0.01,1.0,by=0.01),
phi = seq(0.05,0.5,by=0.01),
sigma = seq(0.01,1.2,by=0.01),
beta = seq(0.4,0.99,by=0.01),
lambda = seq(0.01,1.2,by=0.01),
c_f = seq(0.12,1.3,by=0.01),
r = seq(0.005,0.15,by=0.001),
c_p = seq(0.01,0.2,by=0.001),
delta = seq(0.01,0.7,by=0.01))
# extract part of object
# example
# test = "delta"
# vt = lvt[[test]]
#######################
taskcode<-"Jun01T1"
num_para<-"V27"
str_para0<-paste("paraJun01",num_para,sep = "_")
cell_typen<- c("I","II","III","IV","O")
# 10 cases
cell_case<-c("pstar","b","phi","sigma","beta","lambda","c_f","r","c_p","delta")
v_tt <- 3 # 1:length(cell_typen)
v_cc <- 1 #(1:10)
tt = v_tt
typen=cell_typen[tt]
cc = v_cc
casecode=cell_case[cc]
if (typen == "I") {
epsilon_u <- sqrt(3)
} else if (typen == "II") {
epsilon_u <- sqrt(2)/(sqrt(pi-2))
} else if (typen == "III") {
epsilon_u <- 1
} else if (typen == "IV") {
epsilon_u <- (3-sqrt(3))/2
} else if (typen == "O") {
epsilon_u <- (pi/4)/(sin(pi/4))
}
### variable vector
vt = lvt[[casecode]]
str_fig = paste(taskcode,typen,casecode,sep="_")
# Data Outpu
temp<-read.table(file=paste(str_fig,str_para0,"epsilon_d.txt",sep="_"),sep="\n")
epsilon_d = temp[[1]]
temp<-read.table(file=paste(str_fig,str_para0,"epsilon_c.txt",sep="_"),sep="\n")
epsilon_c = temp[[1]]
temp<-read.table(file=paste(str_fig,str_para0,"theta.txt",sep="_"),sep="\n")
theta = temp[[1]]
temp<-read.table(file=paste(str_fig,str_para0,"alpha.txt",sep="_"),sep="\n")
alpha = temp[[1]]
temp<-read.table(file=paste(str_fig,str_para0,"error.txt",sep="_"),sep="\n")
error = temp[[1]]
temp<-read.table(file=paste(str_fig,str_para0,"flag.txt",sep="_"),sep="\n")
flag = temp[[1]]
path0
# main_Jun01T1_Plot.py
# Python PLOT program for Task 1 of Jun 01,2017
# June 1,2017
# May 22-24, 2017
# 20170411 PM
# Mar18,2017
# Task #20170221
# Related to May16/Oct17,2016
# edited in Feb21,2017
rm(list=ls())
setwd("/Users/huwei/Dropbox/temp/20170628 R Lang")
# path0<-getwd()
# if (!is.null(path0)) setwd(path0)
# use data frame to save and call parameters value
value = c(1.0,0.2,0.6,0.06,0.72,0.1,0.36,0.012,0.06,0.53,1.355,18.0,25.0,0.08)
myPara = data.frame(value)
row.names(myPara)=c("pstar","b","phi","sigma","beta","lambda","c_f","r","c_p","delta","A","B1","B2","mu")
#         value
# pstar   1.000
# b       0.200
# phi     0.600
# sigma   0.060
# beta    0.720
# lambda  0.100
# c_f     0.360
# r       0.012
# c_p     0.060
# delta   0.530
# A       1.355
# B1     18.000
# B2     25.000
# mu      0.080
# call the value:
# myPara["pstar","value"]
# variable vector for different cases
lvt <- list(pstar = seq(0.18,2.5,by=0.01),
b = seq(0.01,1.0,by=0.01),
phi = seq(0.05,0.5,by=0.01),
sigma = seq(0.01,1.2,by=0.01),
beta = seq(0.4,0.99,by=0.01),
lambda = seq(0.01,1.2,by=0.01),
c_f = seq(0.12,1.3,by=0.01),
r = seq(0.005,0.15,by=0.001),
c_p = seq(0.01,0.2,by=0.001),
delta = seq(0.01,0.7,by=0.01))
# extract part of object
# example
# test = "delta"
# vt = lvt[[test]]
lstr_var <- list(pstar = "p^*",
b = seq(0.01,1.0,by=0.01),
phi = seq(0.05,0.5,by=0.01),
sigma = seq(0.01,1.2,by=0.01),
beta = seq(0.4,0.99,by=0.01),
lambda = seq(0.01,1.2,by=0.01),
c_f = seq(0.12,1.3,by=0.01),
r = seq(0.005,0.15,by=0.001),
c_p = seq(0.01,0.2,by=0.001),
delta = seq(0.01,0.7,by=0.01))
# extract part of object
# example
# test = "delta"
# vt = lvt[[test]]
#######################
taskcode<-"Jun01T1"
num_para<-"V27"
str_para0<-paste("paraJun01",num_para,sep = "_")
cell_typen<- c("I","II","III","IV","O")
# 10 cases
cell_case<-c("pstar","b","phi","sigma","beta","lambda","c_f","r","c_p","delta")
v_tt <- 3 # 1:length(cell_typen)
v_cc <- 1 #(1:10)
tt = v_tt
typen=cell_typen[tt]
cc = v_cc
casecode=cell_case[cc]
if (typen == "I") {
epsilon_u <- sqrt(3)
} else if (typen == "II") {
epsilon_u <- sqrt(2)/(sqrt(pi-2))
} else if (typen == "III") {
epsilon_u <- 1
} else if (typen == "IV") {
epsilon_u <- (3-sqrt(3))/2
} else if (typen == "O") {
epsilon_u <- (pi/4)/(sin(pi/4))
}
### variable vector
vt = lvt[[casecode]]
str_fig = paste(taskcode,typen,casecode,sep="_")
# Data Outpu
temp<-read.table(file=paste(str_fig,str_para0,"epsilon_d.txt",sep="_"),sep="\n")
epsilon_d = temp[[1]]
temp<-read.table(file=paste(str_fig,str_para0,"epsilon_c.txt",sep="_"),sep="\n")
epsilon_c = temp[[1]]
temp<-read.table(file=paste(str_fig,str_para0,"theta.txt",sep="_"),sep="\n")
theta = temp[[1]]
temp<-read.table(file=paste(str_fig,str_para0,"alpha.txt",sep="_"),sep="\n")
alpha = temp[[1]]
temp<-read.table(file=paste(str_fig,str_para0,"error.txt",sep="_"),sep="\n")
error = temp[[1]]
temp<-read.table(file=paste(str_fig,str_para0,"flag.txt",sep="_"),sep="\n")
flag = temp[[1]]
# install.packages("latex2exp")
library("latex2exp")
?png
png(filename=paste(str_fig,str_para0,"sol_flag.png",sep="_"))
par(mfrow=c(2,2))
plot(vt,epsilon_d,type="l",lwd=3,
xlab=list(TeX(lstr_var[casecode]),cex=1.5),
ylab=list(TeX("$\\epsilon_d$"),cex=1.5),
main=list(paste(taskcode,typen,sep=","),cex=1.75))
plot(vt,epsilon_c,type="l",lwd=3,
xlab=list(TeX(lstr_var[casecode]),cex=1.5),
ylab=list(TeX("$\\epsilon_c$"),cex=1.5),
main=list(paste(taskcode,typen,sep=","),cex=1.75))
plot(vt,theta,type="l",lwd=3,
xlab=list(TeX(lstr_var[casecode]),cex=1.5),
ylab=list(TeX("$\\theta$"),cex=1.5),
main=list(paste(taskcode,typen,sep=","),cex=1.75))
plot(vt,alpha,type="l",lwd=3,
xlab=list(TeX(lstr_var[casecode]),cex=1.5),
ylab=list(TeX("$\\alpha$"),cex=1.5),
main=list(paste(taskcode,typen,sep=","),cex=1.75))
dev.off
dev.off()
png(filename=paste(str_fig,str_para0,"sol_flag.png",sep="_"),width=400,height=350,res=72)
par(mfrow=c(2,2))
plot(vt,epsilon_d,type="l",lwd=3,
xlab=list(TeX(lstr_var[casecode]),cex=1.5),
ylab=list(TeX("$\\epsilon_d$"),cex=1.5),
main=list(paste(taskcode,typen,sep=","),cex=1.75))
plot(vt,epsilon_c,type="l",lwd=3,
xlab=list(TeX(lstr_var[casecode]),cex=1.5),
ylab=list(TeX("$\\epsilon_c$"),cex=1.5),
main=list(paste(taskcode,typen,sep=","),cex=1.75))
plot(vt,theta,type="l",lwd=3,
xlab=list(TeX(lstr_var[casecode]),cex=1.5),
ylab=list(TeX("$\\theta$"),cex=1.5),
main=list(paste(taskcode,typen,sep=","),cex=1.75))
plot(vt,alpha,type="l",lwd=3,
xlab=list(TeX(lstr_var[casecode]),cex=1.5),
ylab=list(TeX("$\\alpha$"),cex=1.5),
main=list(paste(taskcode,typen,sep=","),cex=1.75))
dev.off()
png(filename=paste(str_fig,str_para0,"sol_flag.png",sep="_"),width=800,height=700)
par(mfrow=c(2,2))
plot(vt,epsilon_d,type="l",lwd=3,
xlab=list(TeX(lstr_var[casecode]),cex=1.5),
ylab=list(TeX("$\\epsilon_d$"),cex=1.5),
main=list(paste(taskcode,typen,sep=","),cex=1.75))
plot(vt,epsilon_c,type="l",lwd=3,
xlab=list(TeX(lstr_var[casecode]),cex=1.5),
ylab=list(TeX("$\\epsilon_c$"),cex=1.5),
main=list(paste(taskcode,typen,sep=","),cex=1.75))
plot(vt,theta,type="l",lwd=3,
xlab=list(TeX(lstr_var[casecode]),cex=1.5),
ylab=list(TeX("$\\theta$"),cex=1.5),
main=list(paste(taskcode,typen,sep=","),cex=1.75))
plot(vt,alpha,type="l",lwd=3,
xlab=list(TeX(lstr_var[casecode]),cex=1.5),
ylab=list(TeX("$\\alpha$"),cex=1.5),
main=list(paste(taskcode,typen,sep=","),cex=1.75))
dev.off()
flag
flag==1
epsilon_d[flag==1]
pflag<-flag==1
pflag
#
pflag<-flag==1
png(filename=paste(str_fig,str_para0,"sol_flag.png",sep="_"),width=800,height=700)
par(mfrow=c(2,2))
plot(vt(pflag),epsilon_d(pflag),type="l",lwd=3,
xlab=list(TeX(lstr_var[casecode]),cex=1.5),
ylab=list(TeX("$\\epsilon_d$"),cex=1.5),
main=list(paste(taskcode,typen,sep=","),cex=1.75))
plot(vt(pflag),epsilon_c(pflag),type="l",lwd=3,
xlab=list(TeX(lstr_var[casecode]),cex=1.5),
ylab=list(TeX("$\\epsilon_c$"),cex=1.5),
main=list(paste(taskcode,typen,sep=","),cex=1.75))
plot(vt(pflag),theta(pflag),type="l",lwd=3,
xlab=list(TeX(lstr_var[casecode]),cex=1.5),
ylab=list(TeX("$\\theta$"),cex=1.5),
main=list(paste(taskcode,typen,sep=","),cex=1.75))
plot(vt(pflag),alpha(pflag),type="l",lwd=3,
xlab=list(TeX(lstr_var[casecode]),cex=1.5),
ylab=list(TeX("$\\alpha$"),cex=1.5),
main=list(paste(taskcode,typen,sep=","),cex=1.75))
dev.off()
pflag<-flag==1
png(filename=paste(str_fig,str_para0,"sol_flag.png",sep="_"),width=800,height=700)
par(mfrow=c(2,2))
plot(vt[pflag],epsilon_d[pflag],type="l",lwd=3,
xlab=list(TeX(lstr_var[casecode]),cex=1.5),
ylab=list(TeX("$\\epsilon_d$"),cex=1.5),
main=list(paste(taskcode,typen,sep=","),cex=1.75))
plot(vt[pflag],epsilon_c[pflag],type="l",lwd=3,
xlab=list(TeX(lstr_var[casecode]),cex=1.5),
ylab=list(TeX("$\\epsilon_c$"),cex=1.5),
main=list(paste(taskcode,typen,sep=","),cex=1.75))
plot(vt[pflag],theta[pflag],type="l",lwd=3,
xlab=list(TeX(lstr_var[casecode]),cex=1.5),
ylab=list(TeX("$\\theta$"),cex=1.5),
main=list(paste(taskcode,typen,sep=","),cex=1.75))
plot(vt[pflag],alpha[pflag],type="l",lwd=3,
xlab=list(TeX(lstr_var[casecode]),cex=1.5),
ylab=list(TeX("$\\alpha$"),cex=1.5),
main=list(paste(taskcode,typen,sep=","),cex=1.75))
dev.off()
test=(1:10)
test
for (i in test){print(i)}
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
min(alpha)
?min
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
vt
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
vt
flag
flag1
flag2
alpha
?nleqslv
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1.R', echo=TRUE)
# use data frame to save and call parameters value
value = c(1.0,0.2,0.6,0.06,0.72,0.1,0.36,0.012,0.06,0.53,1.355,18.0,25.0,0.08)
orgPara = data.frame(value)
row.names(orgPara)=c("pstar","b","phi","sigma","beta","lambda","c_f","r","c_p","delta","A","B1","B2","mu")
orgPara
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1.R', echo=TRUE)
seq(0.05,0.5,by=0.01)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
vt
flag1
flag2
flag3
flag
pflag
casecode
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
vt[pflag]
alpha[pflag]
pflag
vt
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
source('~/Dropbox/temp/20170628 R Lang/main_Jun01T1_Plot.R', echo=TRUE)
